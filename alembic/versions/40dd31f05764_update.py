"""update

Revision ID: 40dd31f05764
Revises: bec46a159104
Create Date: 2025-03-27 22:47:09.708112

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '40dd31f05764'
down_revision: Union[str, None] = 'bec46a159104'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('event', 'description',
               existing_type=sa.VARCHAR(length=1000),
               type_=sa.Text(),
               nullable=False)
    op.alter_column('event', 'additional_members',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('event', 'location',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('event', 'start_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('event', 'end_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.alter_column('tag', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.drop_index('ix_tag_id', table_name='tag')
    op.drop_index('ix_tag_name', table_name='tag')
    op.create_unique_constraint(None, 'tag', ['name'])
    op.drop_column('tag', 'description')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tag', sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'tag', type_='unique')
    op.create_index('ix_tag_name', 'tag', ['name'], unique=False)
    op.create_index('ix_tag_id', 'tag', ['id'], unique=False)
    op.alter_column('tag', 'name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('event', 'end_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('event', 'start_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('event', 'location',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('event', 'additional_members',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('event', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=1000),
               nullable=True)
    # ### end Alembic commands ###
