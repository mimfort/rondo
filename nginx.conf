# Редирект с HTTP на HTTPS для основного домена
server {
    listen 80;
    server_name skkrondo.ru;  # Ваш основной домен

    return 301 https://$server_name$request_uri;
}

# Основной домен (фронтенд)
server {
    listen 443 ssl;
    server_name skkrondo.ru;  # Ваш основной домен

    ssl_certificate /etc/letsencrypt/live/skkrondo.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/skkrondo.ru/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Редирект с HTTP на HTTPS для API домена
server {
    listen 80;
    server_name api.skkrondo.ru;

    return 301 https://$server_name$request_uri;
}

# API домен
server {
    listen 443 ssl;
    server_name api.skkrondo.ru;

    ssl_certificate /etc/letsencrypt/live/api.skkrondo.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.skkrondo.ru/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Добавляем заголовки для сохранения протокола
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header X-Forwarded-Host $host;

    # Добавляем правила для обработки слешей
    merge_slashes on;
    absolute_redirect off;

    # Специальная секция для статических файлов админки
    location /admin/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect http:// https://;
        
        # Принудительно устанавливаем HTTPS для всех ресурсов
        sub_filter "http://$host" "https://$host";
        sub_filter "http://$server_name" "https://$server_name";
        sub_filter_once off;
        sub_filter_types *;
    }

    location / {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect http:// $scheme://;
        
        # Добавляем правила для обработки слешей
        rewrite ^(.*?)//+(.*?)$ $1/$2 permanent;
        rewrite ^(.*?)/$ $1 permanent;
    }

    location /uploads {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect http:// $scheme://;
    }
}